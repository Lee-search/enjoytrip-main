<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.board.model.mapper.BoardMapper">

	<resultMap type="boardDto" id="article">
		<result column="article_no" property="articleNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="subject" property="subject"/>
		<result column="content" property="content"/>
		<result column="hit" property="hit"/>
		<result column="register_time" property="registerTime"/>
	</resultMap>
	
	<resultMap type="boardDto" id="viewArticle" extends="article">
		<collection property="fileInfos" column="article_no" javaType="list" ofType="fileInfoDto" select="fileInfoList"/>
	</resultMap>
	
	<resultMap type="fileInfoDto" id="file">
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>

	<resultMap type="commentDto" id="comment">
		<result column="comment_id" property="commentId"/>
		<result column="article_no" property="articleNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName" />
		<result column="comment_text" property="commentText"/>
		<result column="comment_time" property="commentTime"/>
	</resultMap>

	<insert id="writeArticle" parameterType="boardDto">
		insert into board (user_id, subject, content, hit, register_time, category)
		values (#{userId}, #{subject}, #{content}, 0, now(), '자유게시판')
		<selectKey resultType="int" keyProperty="articleNo" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="registerFile" parameterType="boardDto">
		insert into file_info (article_no, save_folder, original_file, save_file)
		values
		<foreach collection="fileInfos" item="fileinfo" separator=" , ">
			(#{articleNo}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile})
		</foreach>
	</insert>

	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'subject'">
				and subject like concat('%', #{word}, '%')
			</if>
			<if test="key != 'subject'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>

	<select id="listArticle" parameterType="map" resultMap="article">
		select b.article_no, b.user_id, b.subject, b.content, b.hit, b.register_time, m.user_name
		FROM board b
		JOIN members m ON b.user_id = m.user_id
		where b.category = '자유게시판'
		<include refid="search"></include>
		order by b.article_no desc
		limit #{start}, #{listsize}
	</select>
	
	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(article_no)
		from board
		<where>
			category = '자유게시판'
			<include refid="search"></include>
		</where>
	</select>
	
	<select id="getArticle" parameterType="int" resultMap="viewArticle">
		select b.article_no, b.user_id, b.subject, b.content, b.hit, b.register_time, m.user_name 
		from board b, members m
		where b.user_id = m.user_id
		and b.article_no = #{articleNo}
	</select>
	
	<select id="fileInfoList" resultMap="file">
		select save_folder, original_file, save_file
		from file_info
		where article_no = #{articleNo}
	</select>
	
	<update id="updateHit" parameterType="int">
		update board
		set hit = hit + 1
		where article_no = #{articleNo}
	</update>
	
	<update id="modifyArticle" parameterType="boardDto">
		update board
		set subject = #{subject}, content = #{content}
		where article_no = #{articleNo}
	</update>
	
	<delete id="deleteFile" parameterType="int">
		delete from file_info
		where article_no = #{articleNo}
	</delete>
	
	<delete id="deleteArticle" parameterType="int">
		delete from board
		where article_no = #{articleNo}
	</delete>

	<!-- 댓글 관련 추가 -->
	<select id="listComment" parameterType="int" resultMap="comment">
		select c.comment_id, c.article_no, c.user_id, m.user_name, c.comment_text, c.comment_time
		from comments c
		inner join members m on c.user_id = m.user_id
		where c.article_no = #{articleNo};
	</select>

	<insert id="writeComment" parameterType="commentDto">
		insert into comments (article_no, user_id, comment_text, comment_time)
		values (#{articleNo}, #{userId}, #{commentText}, now())
		<selectKey resultType="int" keyProperty="commentId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<delete id="deleteComment" parameterType="int">
		delete from comments
		where comment_id = #{commentId}
	</delete>

</mapper>